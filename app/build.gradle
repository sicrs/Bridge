apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "moe.shizuku.bridge"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 13
        versionName "0.2.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("store.jks")
            storePassword System.getenv("keystore_password")
            keyAlias System.getenv("keystore_alias")
            keyPassword System.getenv("keystore_alias_password")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "tier"
    productFlavors {
        free {
            dimension "tier"
        }
        paid {
            dimension "tier"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation "com.android.support:support-fragment:27.1.1"
    implementation "com.android.support:cardview-v7:27.1.1"
    implementation "com.android.support:recyclerview-v7:27.1.1"
    implementation "moe.shizuku.support:recyclerview-utils:2.1.1"
    implementation "moe.shizuku.support:support-utils:2.2.4"
}

def ksFile = rootProject.file('signing.properties')
def props = new Properties()
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))

    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'keystore.properties\' not found!'
    }
} else {
    println '\'keystore.properties\' not found!'
}
